# $schema: ../schema.json
name: $regexMatch
link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexMatch/'
type:
    - resolvesToBool
encode: object
description: |
    Applies a regular expression (regex) to a string and returns a boolean that indicates if a match is found or not.
    New in MongoDB 4.2.
arguments:
    -
        name: input
        type:
            - resolvesToString
        description: |
            The string on which you wish to apply the regex pattern. Can be a string or any valid expression that resolves to a string.
    -
        name: regex
        type:
            - resolvesToString
            - regex
        description: |
            The regex pattern to apply. Can be any valid expression that resolves to either a string or regex pattern /<pattern>/. When using the regex /<pattern>/, you can also specify the regex options i and m (but not the s or x options)
    -
        name: options
        type:
            - string
        optional: true
tests:
    -
        name: '$regexMatch and Its Options'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexMatch/#-regexmatch-and-its-options'
        pipeline:
            -
                $addFields:
                    result:
                        $regexMatch:
                            input: '$description'
                            regex: !regex 'line'
    -
        name: 'i Option'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexMatch/#i-option'
        pipeline:
            -
                $addFields:
                    result:
                        # Specify i as part of the Regex type
                        $regexMatch:
                            input: '$description'
                            regex: !regex ['line', 'i']
            -
                $addFields:
                    result:
                        # Specify i in the options field
                        $regexMatch:
                            input: '$description'
                            regex: 'line'
                            options: 'i'
            -
                $addFields:
                    result:
                        # Mix Regex type with options field
                        $regexMatch:
                            input: '$description'
                            regex: !regex 'line'
                            options: 'i'
    -
        name: 'Use $regexMatch to Check Email Address'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexMatch/#use--regexmatch-to-check-email-address'
        pipeline:
            -
                $addFields:
                    category:
                        $cond:
                            if:
                                $regexMatch:
                                    input: '$comment'
                                    regex: !regex ['[a-z0-9_.+-]+@mongodb.com', 'i']
                            then: 'Employee'
                            else: 'External'
