# $schema: ../schema.json
name: $regexFindAll
link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexFindAll/'
type:
    - resolvesToArray # of object
encode: object
description: |
    Applies a regular expression (regex) to a string and returns information on the all matched substrings.
    New in MongoDB 4.2.
arguments:
    -
        name: input
        type:
            - resolvesToString
        description: |
            The string on which you wish to apply the regex pattern. Can be a string or any valid expression that resolves to a string.
    -
        name: regex
        type:
            - resolvesToString
            - regex
        description: |
            The regex pattern to apply. Can be any valid expression that resolves to either a string or regex pattern /<pattern>/. When using the regex /<pattern>/, you can also specify the regex options i and m (but not the s or x options)
    -
        name: options
        type:
            - string
        optional: true
tests:
    -
        name: '$regexFindAll and Its Options'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexFindAll/#-regexfindall-and-its-options'
        pipeline:
            -
                $addFields:
                    returnObject:
                        $regexFindAll:
                            input: '$description'
                            regex: !regex 'line'
    -
        name: 'i Option'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexFindAll/#i-option'
        pipeline:
            -
                $addFields:
                    returnObject:
                        # Specify i as part of the regex field
                        $regexFindAll:
                            input: '$description'
                            regex: !regex ['line', 'i']
            -
                $addFields:
                    returnObject:
                        # Specify i in the options field
                        $regexFindAll:
                            input: '$description'
                            regex: 'line'
                            options: 'i'
            -
                $addFields:
                    returnObject:
                        # Specify i in the options field
                        $regexFindAll:
                            input: '$description'
                            regex: !regex 'line'
                            options: 'i'
    -
        name: 'Use $regexFindAll to Parse Email from String'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexFindAll/#use--regexfindall-to-parse-email-from-string'
        pipeline:
            -
                $addFields:
                    email:
                        $regexFindAll:
                            input: '$comment'
                            regex: !regex ['[a-z0-9_.+-]+@[a-z0-9_.+-]+\.[a-z0-9_.+-]+', 'i']
            -
                $set:
                    email: '$email.match'
    -
        name: 'Use Captured Groupings to Parse User Name'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexFindAll/#use-captured-groupings-to-parse-user-name'
        pipeline:
            -
                $addFields:
                    names:
                        $regexFindAll:
                            input: '$comment'
                            regex: !regex ['([a-z0-9_.+-]+)@[a-z0-9_.+-]+\.[a-z0-9_.+-]+', 'i']
            -
                $set:
                    names:
                        $reduce:
                            input: '$names.captures'
                            initialValue: []
                            in:
                                $concatArrays:
                                    - '$$value'
                                    - '$$this'
