# $schema: ../schema.json
name: $objectToArray
link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/objectToArray/'
type:
    - resolvesToArray
encode: single
description: |
    Converts a document to an array of documents representing key-value pairs.
arguments:
    -
        name: object
        type:
            - resolvesToObject
        description: |
            Any valid expression as long as it resolves to a document object. $objectToArray applies to the top-level fields of its argument. If the argument is a document that itself contains embedded document fields, the $objectToArray does not recursively apply to the embedded document fields.
tests:
    # "$objectToArray and $arrayToObject Example" omitted as it's already in arrayToObject.yaml
    -
        name: '$objectToArray Example'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/objectToArray/#-objecttoarray-example'
        pipeline:
            -
                $project:
                    item: 1
                    dimensions:
                        $objectToArray: '$dimensions'
    -
        name: '$objectToArray to Sum Nested Fields'
        link: 'https://www.mongodb.com/docs/manual/reference/operator/aggregation/objectToArray/#-objecttoarray-to-sum-nested-fields'
        pipeline:
            -
                $project:
                    warehouses:
                        $objectToArray: '$instock'
            -
                # Example uses the short form, the builder always generates the verbose form
                # $unwind: '$warehouses'
                $unwind:
                    path: '$warehouses'
            -
                $group:
                    _id: '$warehouses.k'
                    total:
                        $sum: '$warehouses.v'
